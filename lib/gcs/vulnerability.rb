module Gcs
  class Vulnerability
    extend Forwardable

    def_delegators(:@vals, :message, :description,
      :cve, :severity, :solution, :confidence, :scanner, :location, :identifiers, :links, :operating_system)
    def initialize(params = {})
      @vals = OpenStruct.new(params)
      update_location_image
    end

    def to_hash
      {
        'id' => generate_id,
        'category' => 'container_scanning',
        'message' => message,
        'description' => description,
        'cve' => cve,
        'severity' => severity,
        'confidence' => confidence,
        'solution' => solution,
        'scanner' => { 'id' => 'trivy', 'name' => 'trivy' },
        'location' => location,
        'identifiers' => identifiers,
        'links' => links
      }
    end

    private

    def generate_id
      hash_fields = %i[message description cve severity solution scanner location identifiers links]
      res = hash_fields.map { |getter| send(getter) }.join(':')
      Digest::SHA1.hexdigest(res)
    end

    # convert Trivy image format to Gitlab
    # eg. alpine:latest (alpine 3.12.0)" -> alpine:latest
    def update_location_image
      # raise error if there is no image
      image, _ = location['image'].split(' ', 2)
      location['image'] = image
    end
  end
end