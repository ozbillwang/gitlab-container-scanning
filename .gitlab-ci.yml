---
# Workaround to the detached pipeline as described in
# https://gitlab.com/gitlab-org/gitlab/-/issues/34756
workflow:
  rules:
    - if: '$CI_MERGE_REQUEST_EVENT_TYPE == "detached"'
      when: never
    - when: always

# When using dind, it's wise to use the overlayfs driver for
# improved performance.
variables:
  # The context of these variables is global to the downstream job
  DOCKER_DRIVER: overlay2
  MAJOR: 1
  TMP_IMAGE: $CI_REGISTRY_IMAGE/tmp:$CI_COMMIT_SHA

stages:
  # check, test, and scan the Docker images
  - initial-test
  - build-image
  - integration-test
  # release Docker images and distro packages
  - release-version
  # update Docker images and distro packages of the major release
  - release-major

# Yamllint of CI-related yaml and changelogs.
# This uses rules from project root `.yamllint`.
lint-yaml:
  image: pipelinecomponents/yamllint:latest
  stage: initial-test
  variables:
    LINT_PATHS: .gitlab-ci.yml .rubocop.yml spec/fixtures
  script:
    - yamllint -f colored $LINT_PATHS

unit test:
  image: ruby:2.7.2-alpine
  stage: initial-test
  script:
    - apk add git
    - bundle config --local jobs "$(nproc)"
    - bundle config set no-cache 'true'
    - bundle install --quiet
    - bundle exec rake unit_test

gitlab styles:
  image: ruby:2.7.2-alpine
  stage: initial-test
  allow_failure: true
  script:
    - bundle config --local jobs "$(nproc)"
    - bundle config set no-cache 'true'
    - bundle install --quiet
    - bundle exec rubocop

dependency_scanning:
  stage: initial-test

gemnasium-dependency_scanning:
  rules:
    - changes:
        - Gemfile.lock

bundler-audit-dependency_scanning:
  rules:
    - changes:
        - Gemfile.lock

license_scanning:
  stage: initial-test
  rules:
    - changes:
        - Gemfile.lock

build-tmp-image:
  image: docker:stable
  stage: build-image
  services:
    - docker:19.03.5-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -q -t $TMP_IMAGE .
    - docker push $TMP_IMAGE

integration test:
  image: $TMP_IMAGE
  stage: integration-test
  variables:
    IMAGE_TAG: $TMP_IMAGE
  script:
    - sudo ./script/setup_integration
    - bundle exec rake integration

.docker_tag:
  image: docker:stable
  stage: release-version
  services:
    - docker:19.03.5-dind
  script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - export SOURCE_IMAGE=$TMP_IMAGE
    - export TARGET_IMAGE=$CI_REGISTRY_IMAGE:${IMAGE_TAG:-$CI_JOB_NAME}
    - docker pull $SOURCE_IMAGE
    - docker tag $SOURCE_IMAGE $TARGET_IMAGE
    - docker push $TARGET_IMAGE

tag branch:
  extends: .docker_tag
  variables:
    # CAUTION: by preferring `SLUG` over `NAME` we can properly handle
    # non-alphanumeric characters, but this may limit our tags to 63 chars
    # or raise potential conflicts.
    IMAGE_TAG: $CI_COMMIT_REF_SLUG
  rules:
    - if: $CI_DEFAULT_BRANCH == $CI_COMMIT_REF_NAME
      when: never
    - if: $CI_COMMIT_BRANCH

tag edge:
  extends: .docker_tag
  variables:
    IMAGE_TAG: edge
  rules:
    - if: $CI_DEFAULT_BRANCH == $CI_COMMIT_REF_NAME

tag version:
  extends: .docker_tag
  before_script:
    - export IMAGE_TAG=${CI_COMMIT_TAG/v/}
  rules:
    - if: $CI_COMMIT_TAG

.release:
  extends: .docker_tag
  stage: release-major
  rules:
    - if: $CI_COMMIT_TAG

major:
  extends: .release
  variables:
    IMAGE_TAG: $MAJOR

latest:
  extends: .release

include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
