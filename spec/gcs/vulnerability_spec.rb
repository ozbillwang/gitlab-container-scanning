# frozen_string_literal: true
RSpec.describe Gcs::Vulnerability do
  let(:params) do
    {
      'category' => 'container_scanning',
      'message' => '',
      'description' =>
      'In musl libc through 1.2.1, wcsnrtombs mishandles particular combinations of destination buffer size and' \
      ' source character limit, as demonstrated by an invalid write access (buffer overflow).',
      'cve' => 'CVE-2020-28928',
      'severity' => 'Unknown',
      'confidence' => 'Unknown',
      'solution' => 'Upgrade musl to 1.1.24-r10',
      'scanner' => { 'id' => 'trivy', 'name' => 'trivy' },
      'location' => {
        'dependency' => {
          'package' => { 'name' => 'musl' }, 'version' => '1.1.24-r8'
        },
        'operating_system' => 'Unknown',
        'image' => 'registry.example.com/group/project/branch:tag (alpine 3.12.0)'
      },
      'identifiers' => [
        {
          'type' => 'cve',
          'name' => 'CVE-2020-28928',
          'value' => 'CVE-2020-28928',
          'url' => ''
        }
      ],
      'links' => [
        { 'url' => 'http://www.openwall.com/lists/oss-security/2020/11/20/4' },
        { 'url' => 'https://musl.libc.org/releases.html' }
      ]
    }
  end

  before do
    allow(ENV).to receive(:fetch).with('CI_DEFAULT_BRANCH').and_return('main')
    allow(ENV).to receive(:fetch).with('CI_REGISTRY_IMAGE').and_return('registry.example.com/group/project')
    allow(ENV).to receive(:include?).with('CI_DEFAULT_BRANCH').and_return(true)
    allow(ENV).to receive(:include?).with('CI_REGISTRY_IMAGE').and_return(true)
    allow(ENV).to receive(:fetch).with('CI_APPLICATION_TAG').and_return('latest')
    allow(ENV).to receive(:fetch).with('CS_DEFAULT_BRANCH_IMAGE', nil).and_return(nil)
  end

  it 'formats vulnerability to parsable format' do
    vulnerability = described_class.new(params)
    expect(vulnerability.to_hash).to match(
      {
        "id" => "a6233387c0063d8a5cd3a57407bb3c8d74fe373f",
        'category' => 'container_scanning',
        'message' => '',
        'description' =>
        'In musl libc through 1.2.1, wcsnrtombs mishandles particular combinations of destination buffer size and' \
        ' source character limit, as demonstrated by an invalid write access (buffer overflow).',
        'cve' => 'CVE-2020-28928',
        'severity' => 'Unknown',
        'confidence' => 'Unknown',
        'solution' => 'Upgrade musl to 1.1.24-r10',
        'scanner' => { 'id' => 'trivy', 'name' => 'trivy' },
        "location" => {
          "dependency" => {
            "package" => { "name" => "musl" },
            "version" => "1.1.24-r8"
          },
          "image" => "registry.example.com/group/project/branch:tag",
          "operating_system" => "alpine 3.12.0"
        },
        'identifiers' => [
          {
            'type' => 'cve',
            'name' => 'CVE-2020-28928',
            'value' => 'CVE-2020-28928',
            'url' => 'http://www.openwall.com/lists/oss-security/2020/11/20/4'
          }
        ],
        'links' => [
          {
            'url' => 'http://www.openwall.com/lists/oss-security/2020/11/20/4'
          },
          { 'url' => 'https://musl.libc.org/releases.html' }
        ]
      }
    )
  end

  it 'formats image_name and operating_system' do
    params['location']['image'] = 'alpine:latest'
    params['location']['operating_system'] = 'alpine 3.12.0'

    vulnerability = described_class.new(params)
    expect(vulnerability.to_hash['location']['image']).to eq('alpine:latest')
    expect(vulnerability.to_hash['location']['operating_system']).to eq('alpine 3.12.0')
  end

  context 'when image is empty' do
    it 'sets image name to requested image name' do
      params['location']['image'] = ''

      vulnerability = described_class.new(params, 'requested/image:name')
      expect(vulnerability.to_hash['location']['image']).to eq('requested/image:name')
    end
  end

  context 'when links are empty' do
    before do
      params['links'] = []
    end

    it 'populates identifier with default url' do
      vulnerability = described_class.new(params)
      expect(vulnerability.to_hash['identifiers'].first).to eq(
        {
          'type' => 'cve',
          'name' => 'CVE-2020-28928',
          'value' => 'CVE-2020-28928',
          'url' => 'https://nvd.nist.gov/vuln/detail/CVE-2020-28928'
        }
      )
    end
  end

  describe 'default_branch_image' do
    using RSpec::Parameterized::TableSyntax

    where(:image, :validity) do
      "registry.com/product/webgoat-8.0:latest" | true
      "registry.com:latest" | true
      "ubuntu:latest" | true
      "gdk.local:5000/group/project:tag" | true
      "dev.gitlab.org:5005/gitlab/charts/components/images/gitlab-webservice-ee:14-5-202111161320-d44dcb9085e" | true
      "https://registry.com/product/webgoat-8.0:latest" | false
      "registry.com/product/webgoat-8.0:tag:another-tag" | false
      "registry.com/image?key=value" | false
      "registry.com\\\\image:latest" | false
      "user@registry.com/image:latest" | false
      "registry.com/product/webgoat-8.0@sha256:bc09fe2e0" | false
    end

    with_them do
      it 'is absent when invalid' do
        allow(ENV).to receive(:fetch).with('CS_DEFAULT_BRANCH_IMAGE', nil).and_return(image)

        vulnerability = described_class.new(params)
        expectation = {
          "id" => vulnerability.id,
          'category' => 'container_scanning',
          'message' => '',
          'description' =>
          'In musl libc through 1.2.1, wcsnrtombs mishandles particular combinations of destination buffer size and' \
          ' source character limit, as demonstrated by an invalid write access (buffer overflow).',
          'cve' => 'CVE-2020-28928',
          'severity' => 'Unknown',
          'confidence' => 'Unknown',
          'solution' => 'Upgrade musl to 1.1.24-r10',
          'scanner' => { 'id' => 'trivy', 'name' => 'trivy' },
          "location" => {
            "dependency" => {
              "package" => {
                "name" => "musl"
              },
              "version" => "1.1.24-r8"
            },
            "image" => "registry.example.com/group/project/branch:tag",
            "operating_system" => "alpine 3.12.0",
            "default_branch_image" => image
          },
          'identifiers' => [
            {
              'type' => 'cve',
              'name' => 'CVE-2020-28928',
              'value' => 'CVE-2020-28928',
              'url' => 'http://www.openwall.com/lists/oss-security/2020/11/20/4'
            }
          ],
          'links' => [
            {
              'url' => 'http://www.openwall.com/lists/oss-security/2020/11/20/4'
            },
            { 'url' => 'https://musl.libc.org/releases.html' }
          ]
        }
        expectation["location"].delete("default_branch_image") unless validity
        expect(vulnerability.to_hash).to match(expectation)
      end
    end
  end
end
